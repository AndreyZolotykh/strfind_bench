#include <benchmark/benchmark.h>
#include <string.h>

#include <cstring>
#include <string_view>

const char* testString =
    "By default each benchmark is run once and that single result is reported. However benchmarks "
    "are often noisy and a single result may not be representative of the overall behavior. For "
    "this reason it's possible to repeatedly rerun the benchmark."
    "The number of runs of each benchmark is specified globally by the --benchmark_repetitions "
    "flag or on a per benchmark basis by calling Repetitions on the registered benchmark object. "
    "When a benchmark is run more than once the mean, median, standard deviation and coefficient "
    "of variation of the runs will be reported."
    "Additionally the --benchmark_report_aggregates_only={true|false}, "
    "--benchmark_display_aggregates_only={true|false} flags or ReportAggregatesOnly(bool), "
    "DisplayAggregatesOnly(bool) functions can be used to change how repeated tests are reported. "
    "By default the result of each repeated run is reported. When report aggregates only option is "
    "true, only the aggregates (i.e. mean, median, standard deviation and coefficient of "
    "variation, maybe complexity measurements if they were requested) of the runs is reported, to "
    "both the reporters - standard output (console), and the file. However when only the display "
    "aggregates only option is true, only the aggregates are displayed in the standard output, "
    "By default each benchmark is run once and that single result is reported. However benchmarks "
    "are often noisy and a single result may not be representative of the overall behavior. For "
    "this reason it's possible to repeatedly rerun the benchmark."
    "The number of runs of each benchmark is specified globally by the --benchmark_repetitions "
    "flag or on a per benchmark basis by calling Repetitions on the registered benchmark object. "
    "When a benchmark is run more than once the mean, median, standard deviation and coefficient "
    "of variation of the runs will be reported."
    "Additionally the --benchmark_report_aggregates_only={true|false}, "
    "--benchmark_display_aggregates_only={true|false} flags or ReportAggregatesOnly(bool), "
    "DisplayAggregatesOnly(bool) functions can be used to change how repeated tests are reported. "
    "By default the result of each repeated run is reported. When report aggregates only option is "
    "true, only the aggregates (i.e. mean, median, standard deviation and coefficient of "
    "variation, maybe complexity measurements if they were requested) of the runs is reported, to "
    "both the reporters - standard output (console), and the file. However when only the display "
    "aggregates only option is true, only the aggregates are displayed in the standard output, "
    "By default each benchmark is run once and that single result is reported. However benchmarks "
    "are often noisy and a single result may not be representative of the overall behavior. For "
    "this reason it's possible to repeatedly rerun the benchmark."
    "The number of runs of each benchmark is specified globally by the --benchmark_repetitions "
    "flag or on a per benchmark basis by calling Repetitions on the registered benchmark object. "
    "When a benchmark is run more than once the mean, median, standard deviation and coefficient "
    "of variation of the runs will be reported."
    "Additionally the --benchmark_report_aggregates_only={true|false}, "
    "--benchmark_display_aggregates_only={true|false} flags or ReportAggregatesOnly(bool), "
    "DisplayAggregatesOnly(bool) functions can be used to change how repeated tests are reported. "
    "By default the result of each repeated run is reported. When report aggregates only option is "
    "true, only the aggregates (i.e. mean, median, standard deviation and coefficient of "
    "variation, maybe complexity measurements if they were requested) of the runs is reported, to "
    "both the reporters - standard output (console), and the file. However when only the display "
    "aggregates only option is true, only the aggregates are displayed in the standard output, "
    "By default each benchmark is run once and that single result is reported. However benchmarks "
    "are often noisy and a single result may not be representative of the overall behavior. For "
    "this reason it's possible to repeatedly rerun the benchmark."
    "The number of runs of each benchmark is specified globally by the --benchmark_repetitions "
    "flag or on a per benchmark basis by calling Repetitions on the registered benchmark object. "
    "When a benchmark is run more than once the mean, median, standard deviation and coefficient "
    "of variation of the runs will be reported."
    "Additionally the --benchmark_report_aggregates_only={true|false}, "
    "--benchmark_display_aggregates_only={true|false} flags or ReportAggregatesOnly(bool), "
    "DisplayAggregatesOnly(bool) functions can be used to change how repeated tests are reported. "
    "By default the result of each repeated run is reported. When report aggregates only option is "
    "true, only the aggregates (i.e. mean, median, standard deviation and coefficient of "
    "variation, maybe complexity measurements if they were requested) of the runs is reported, to "
    "both the reporters - standard output (console), and the file. However when only the display "
    "aggregates only option is true, only the aggregates are displayed in the standard output, "
    "By default each benchmark is run once and that single result is reported. However benchmarks "
    "are often noisy and a single result may not be representative of the overall behavior. For "
    "this reason it's possible to repeatedly rerun the benchmark."
    "The number of runs of each benchmark is specified globally by the --benchmark_repetitions "
    "flag or on a per benchmark basis by calling Repetitions on the registered benchmark object. "
    "When a benchmark is run more than once the mean, median, standard deviation and coefficient "
    "of variation of the runs will be reported."
    "Additionally the --benchmark_report_aggregates_only={true|false}, "
    "--benchmark_display_aggregates_only={true|false} flags or ReportAggregatesOnly(bool), "
    "DisplayAggregatesOnly(bool) functions can be used to change how repeated tests are reported. "
    "By default the result of each repeated run is reported. When report aggregates only option is "
    "true, only the aggregates (i.e. mean, median, standard deviation and coefficient of "
    "variation, maybe complexity measurements if they were requested) of the runs is reported, to "
    "both the reporters - standard output (console), and the file. However when only the display "
    "aggregates only option is true, only the aggregates are displayed in the standard output, "
    "By default each benchmark is run once and that single result is reported. However benchmarks "
    "are often noisy and a single result may not be representative of the overall behavior. For "
    "this reason it's possible to repeatedly rerun the benchmark."
    "The number of runs of each benchmark is specified globally by the --benchmark_repetitions "
    "flag or on a per benchmark basis by calling Repetitions on the registered benchmark object. "
    "When a benchmark is run more than once the mean, median, standard deviation and coefficient "
    "of variation of the runs will be reported."
    "Additionally the --benchmark_report_aggregates_only={true|false}, "
    "--benchmark_display_aggregates_only={true|false} flags or ReportAggregatesOnly(bool), "
    "DisplayAggregatesOnly(bool) functions can be used to change how repeated tests are reported. "
    "By default the result of each repeated run is reported. When report aggregates only option is "
    "true, only the aggregates (i.e. mean, median, standard deviation and coefficient of "
    "variation, maybe complexity measurements if they were requested) of the runs is reported, to "
    "both the reporters - standard output (console), and the file. However when only the display "
    "aggregates only option is true, only the aggregates are displayed in the standard output, "
    "By default each benchmark is run once and that single result is reported. However benchmarks "
    "are often noisy and a single result may not be representative of the overall behavior. For "
    "this reason it's possible to repeatedly rerun the benchmark."
    "The number of runs of each benchmark is specified globally by the --benchmark_repetitions "
    "flag or on a per benchmark basis by calling Repetitions on the registered benchmark object. "
    "When a benchmark is run more than once the mean, median, standard deviation and coefficient "
    "of variation of the runs will be reported."
    "Additionally the --benchmark_report_aggregates_only={true|false}, "
    "--benchmark_display_aggregates_only={true|false} flags or ReportAggregatesOnly(bool), "
    "DisplayAggregatesOnly(bool) functions can be used to change how repeated tests are reported. "
    "By default the result of each repeated run is reported. When report aggregates only option is "
    "true, only the aggregates (i.e. mean, median, standard deviation and coefficient of "
    "variation, maybe complexity measurements if they were requested) of the runs is reported, to "
    "both the reporters - standard output (console), and the file. However when only the display "
    "aggregates only option is true, only the aggregates are displayed in the standard output, "
    "By default each benchmark is run once and that single result is reported. However benchmarks "
    "are often noisy and a single result may not be representative of the overall behavior. For "
    "this reason it's possible to repeatedly rerun the benchmark."
    "The number of runs of each benchmark is specified globally by the --benchmark_repetitions "
    "flag or on a per benchmark basis by calling Repetitions on the registered benchmark object. "
    "When a benchmark is run more than once the mean, median, standard deviation and coefficient "
    "of variation of the runs will be reported."
    "Additionally the --benchmark_report_aggregates_only={true|false}, "
    "--benchmark_display_aggregates_only={true|false} flags or ReportAggregatesOnly(bool), "
    "DisplayAggregatesOnly(bool) functions can be used to change how repeated tests are reported. "
    "By default the result of each repeated run is reported. When report aggregates only option is "
    "true, only the aggregates (i.e. mean, median, standard deviation and coefficient of "
    "variation, maybe complexity measurements if they were requested) of the runs is reported, to "
    "both the reporters - standard output (console), and the file. However when only the display "
    "aggregates only option is true, only the aggregates are displayed in the standard output, "
    "By default each benchmark is run once and that single result is reported. However benchmarks "
    "are often noisy and a single result may not be representative of the overall behavior. For "
    "this reason it's possible to repeatedly rerun the benchmark."
    "The number of runs of each benchmark is specified globally by the --benchmark_repetitions "
    "flag or on a per benchmark basis by calling Repetitions on the registered benchmark object. "
    "When a benchmark is run more than once the mean, median, standard deviation and coefficient "
    "of variation of the runs will be reported."
    "Additionally the --benchmark_report_aggregates_only={true|false}, "
    "--benchmark_display_aggregates_only={true|false} flags or ReportAggregatesOnly(bool), "
    "DisplayAggregatesOnly(bool) functions can be used to change how repeated tests are reported. "
    "By default the result of each repeated run is reported. When report aggregates only option is "
    "true, only the aggregates (i.e. mean, median, standard deviation and coefficient of "
    "variation, maybe complexity measurements if they were requested) of the runs is reported, to "
    "both the reporters - standard output (console), and the file. However when only the display "
    "aggregates only option is true, only the aggregates are displayed in the standard output, "
    "By default each benchmark is run once and that single result is reported. However benchmarks "
    "are often noisy and a single result may not be representative of the overall behavior. For "
    "this reason it's possible to repeatedly rerun the benchmark."
    "The number of runs of each benchmark is specified globally by the --benchmark_repetitions "
    "flag or on a per benchmark basis by calling Repetitions on the registered benchmark object. "
    "When a benchmark is run more than once the mean, median, standard deviation and coefficient "
    "of variation of the runs will be reported."
    "Additionally the --benchmark_report_aggregates_only={true|false}, "
    "--benchmark_display_aggregates_only={true|false} flags or ReportAggregatesOnly(bool), "
    "DisplayAggregatesOnly(bool) functions can be used to change how repeated tests are reported. "
    "By default the result of each repeated run is reported. When report aggregates only option is "
    "true, only the aggregates (i.e. mean, median, standard deviation and coefficient of "
    "variation, maybe complexity measurements if they were requested) of the runs is reported, to "
    "both the reporters - standard output (console), and the file. However when only the display "
    "aggregates only option is true, only the aggregates are displayed in the standard output, "
    "By default each benchmark is run once and that single result is reported. However benchmarks "
    "are often noisy and a single result may not be representative of the overall behavior. For "
    "this reason it's possible to repeatedly rerun the benchmark."
    "The number of runs of each benchmark is specified globally by the --benchmark_repetitions "
    "flag or on a per benchmark basis by calling Repetitions on the registered benchmark object. "
    "When a benchmark is run more than once the mean, median, standard deviation and coefficient "
    "of variation of the runs will be reported."
    "Additionally the --benchmark_report_aggregates_only={true|false}, "
    "--benchmark_display_aggregates_only={true|false} flags or ReportAggregatesOnly(bool), "
    "DisplayAggregatesOnly(bool) functions can be used to change how repeated tests are reported. "
    "By default the result of each repeated run is reported. When report aggregates only option is "
    "true, only the aggregates (i.e. mean, median, standard deviation and coefficient of "
    "variation, maybe complexity measurements if they were requested) of the runs is reported, to "
    "both the reporters - standard output (console), and the file. However when only the display "
    "aggregates only option is true, only the aggregates are displayed in the standard output, "
    "By default each benchmark is run once and that single result is reported. However benchmarks "
    "are often noisy and a single result may not be representative of the overall behavior. For "
    "this reason it's possible to repeatedly rerun the benchmark."
    "The number of runs of each benchmark is specified globally by the --benchmark_repetitions "
    "flag or on a per benchmark basis by calling Repetitions on the registered benchmark object. "
    "When a benchmark is run more than once the mean, median, standard deviation and coefficient "
    "of variation of the runs will be reported."
    "Additionally the --benchmark_report_aggregates_only={true|false}, "
    "--benchmark_display_aggregates_only={true|false} flags or ReportAggregatesOnly(bool), "
    "DisplayAggregatesOnly(bool) functions can be used to change how repeated tests are reported. "
    "By default the result of each repeated run is reported. When report aggregates only option is "
    "true, only the aggregates (i.e. mean, median, standard deviation and coefficient of "
    "variation, maybe complexity measurements if they were requested) of the runs is reported, to "
    "both the reporters - standard output (console), and the file. However when only the display "
    "aggregates only option is true, only the aggregates are displayed in the standard output, "
    "By default each benchmark is run once and that single result is reported. However benchmarks "
    "are often noisy and a single result may not be representative of the overall behavior. For "
    "this reason it's possible to repeatedly rerun the benchmark."
    "The number of runs of each benchmark is specified globally by the --benchmark_repetitions "
    "flag or on a per benchmark basis by calling Repetitions on the registered benchmark object. "
    "When a benchmark is run more than once the mean, median, standard deviation and coefficient "
    "of variation of the runs will be reported."
    "Additionally the --benchmark_report_aggregates_only={true|false}, "
    "--benchmark_display_aggregates_only={true|false} flags or ReportAggregatesOnly(bool), "
    "DisplayAggregatesOnly(bool) functions can be used to change how repeated tests are reported. "
    "By default the result of each repeated run is reported. When report aggregates only option is "
    "true, only the aggregates (i.e. mean, median, standard deviation and coefficient of "
    "variation, maybe complexity measurements if they were requested) of the runs is reported, to "
    "both the reporters - standard output (console), and the file. However when only the display "
    "aggregates only option is true, only the aggregates are displayed in the standard output, "
    "By default each benchmark is run once and that single result is reported. However benchmarks "
    "are often noisy and a single result may not be representative of the overall behavior. For "
    "this reason it's possible to repeatedly rerun the benchmark."
    "The number of runs of each benchmark is specified globally by the --benchmark_repetitions "
    "flag or on a per benchmark basis by calling Repetitions on the registered benchmark object. "
    "When a benchmark is run more than once the mean, median, standard deviation and coefficient "
    "of variation of the runs will be reported."
    "Additionally the --benchmark_report_aggregates_only={true|false}, "
    "--benchmark_display_aggregates_only={true|false} flags or ReportAggregatesOnly(bool), "
    "DisplayAggregatesOnly(bool) functions can be used to change how repeated tests are reported. "
    "By default the result of each repeated run is reported. When report aggregates only option is "
    "true, only the aggregates (i.e. mean, median, standard deviation and coefficient of "
    "variation, maybe complexity measurements if they were requested) of the runs is reported, to "
    "both the reporters - standard output (console), and the file. However when only the display "
    "aggregates only option is true, only the aggregates are displayed in the standard output, "
    "By default each benchmark is run once and that single result is reported. However benchmarks "
    "are often noisy and a single result may not be representative of the overall behavior. For "
    "this reason it's possible to repeatedly rerun the benchmark."
    "The number of runs of each benchmark is specified globally by the --benchmark_repetitions "
    "flag or on a per benchmark basis by calling Repetitions on the registered benchmark object. "
    "When a benchmark is run more than once the mean, median, standard deviation and coefficient "
    "of variation of the runs will be reported."
    "Additionally the --benchmark_report_aggregates_only={true|false}, "
    "--benchmark_display_aggregates_only={true|false} flags or ReportAggregatesOnly(bool), "
    "DisplayAggregatesOnly(bool) functions can be used to change how repeated tests are reported. "
    "By default the result of each repeated run is reported. When report aggregates only option is "
    "true, only the aggregates (i.e. mean, median, standard deviation and coefficient of "
    "variation, maybe complexity measurements if they were requested) of the runs is reported, to "
    "both the reporters - standard output (console), and the file. However when only the display "
    "aggregates only option is true, only the aggregates are displayed in the standard output, "
    "By default each benchmark is run once and that single result is reported. However benchmarks "
    "are often noisy and a single result may not be representative of the overall behavior. For "
    "this reason it's possible to repeatedly rerun the benchmark."
    "The number of runs of each benchmark is specified globally by the --benchmark_repetitions "
    "flag or on a per benchmark basis by calling Repetitions on the registered benchmark object. "
    "When a benchmark is run more than once the mean, median, standard deviation and coefficient "
    "of variation of the runs will be reported."
    "Additionally the --benchmark_report_aggregates_only={true|false}, "
    "--benchmark_display_aggregates_only={true|false} flags or ReportAggregatesOnly(bool), "
    "DisplayAggregatesOnly(bool) functions can be used to change how repeated tests are reported. "
    "By default the result of each repeated run is reported. When report aggregates only option is "
    "true, only the aggregates (i.e. mean, median, standard deviation and coefficient of "
    "variation, maybe complexity measurements if they were requested) of the runs is reported, to "
    "both the reporters - standard output (console), and the file. However when only the display "
    "aggregates only option is true, only the aggregates are displayed in the standard output, "
    "while the file output still contains everything. Calling ReportAggregatesOnly(bool) / "
    "DisplayAggregatesOnly(bool) on a registered benchmark object overrides the value of the "
    "appropriate flag for that benchmark.";


const std::string_view testStringView(testString);
const std::string_view token = "everything 98989899";

void BM_find_str_str(benchmark::State& state) {
 static size_t num;
 for (auto _ : state) num = strstr(testString, token.data()) - testString;
}
void BM_find_string_view(benchmark::State& state)
{
    for (auto _ : state) testStringView.find(token.data(), 0, 10);
}

void BM_find_memem(benchmark::State& state)
{
    for (auto _ : state) memmem(testString, testStringView.size(), token.data(), 10);
}

BENCHMARK(BM_find_string_view);
BENCHMARK(BM_find_str_str);
BENCHMARK(BM_find_memem);

BENCHMARK_MAIN();
